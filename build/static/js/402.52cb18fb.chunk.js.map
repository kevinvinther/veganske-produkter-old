{"version":3,"file":"static/js/402.52cb18fb.chunk.js","mappings":"k4hCAyGA,GAlGoBA,EAAAA,EAAAA,OAAK,SAAAC,GAAkB,IAAfC,EAAOD,EAAPC,QAExBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAwCL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCb,EAAAA,EAAAA,UAAS,CAAC,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpC,OACIG,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDC,WAAS,EACTC,MAAO,CAAEC,MAAO,OAAQC,aAAc,QACtCC,OACIN,EAAAA,EAAAA,MAAA,OACIG,MAAO,CACHC,MAAO,OACPG,OAAQ,QACRC,SAAU,SACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACdC,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CACVC,IAAKlC,EAAQmC,MACbC,IAAG,YAAAC,OAAcrC,EAAQa,OACzByB,eAAc,GAAAD,OAAKrC,EAAQa,MAAM0B,QAAQ,OAAQ,oBACjDC,OAAO,OACPlB,MAAO,CACHC,MAAO,OACPG,OAAQ,OACRe,UAAW,SAEfC,QAAS,WACLxB,GAAgB,GAChBJ,EAASd,EACb,KAEJgC,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CACFtC,QAASY,GAAgBJ,IAAUb,EACnC4C,KAAM,kBAAM1B,GAAgB,EAAM,EAClC2B,SAAU,kBAAM3B,GAAgB,EAAM,EAACa,UAEvCC,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CACVC,IAAKlC,EAAQmC,MACbC,IAAG,WAAAC,OAAarC,EAAQa,OACxByB,eAAc,GAAAD,OAAKrC,EAAQa,MAAM0B,QAAQ,OAAQ,oBACjDC,OAAO,OACPlB,MAAO,CACHC,MAAO,OACPG,OAAQ,OACRe,UAAW,gBAK9BV,SAAA,EAEDC,EAAAA,EAAAA,KAACZ,EAAAA,EAAAA,KAAS,CACNe,MAAOnC,EAAQmC,MACfW,YAAa9C,EAAQ8C,eAEzB3B,EAAAA,EAAAA,MAAA,KAAAY,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACP/B,EAAQ+C,SAASC,KAAI,SAACD,EAAUE,GAAK,OAClCjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAG,CAAaC,MAAM,MAAKpB,SACvBgB,GADKE,EAEJ,QAGd9B,EAAAA,EAAAA,MAAA,KAAAY,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBACP/B,EAAQoD,UAAUJ,KAAI,SAACK,EAAUJ,GAAK,OACnCjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAG,CAAaC,MAAM,OAAMpB,SACxBsB,GADKJ,EAEJ,QAGdjB,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CACHC,KAAK,UACLb,QAAS,WACLpC,GAAW,GACXI,EAAgBV,EACpB,EAAE+B,SACL,WAGDZ,EAAAA,EAAAA,MAACwB,EAAAA,EAAK,CACFR,MAAM,QACN9B,QAASA,GAAWI,IAAiBT,EACrC4C,KAAM,kBAAMtC,GAAW,EAAM,EAC7BuC,SAAU,kBAAMvC,GAAW,EAAM,EAACyB,SAAA,EAElCC,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CAACC,IAAI,GAAGE,IAAKpC,EAAQwD,eACnCxB,EAAAA,EAAAA,KAAA,KAAAD,SAAI/B,EAAQyD,kBAI5B,I,0DC1FQC,EAAYC,EAAAA,EAAAA,QACZC,EAAUC,EAAAA,EAAAA,MA0DlB,EAxDiB,WACf,IAAA5D,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzC6D,EAAU3D,EAAA,GAAE4D,EAAa5D,EAAA,GAW1B6D,EAJiBC,EAAAA,MAAc,SAACC,EAAGC,GAAC,OACxCD,EAAE/B,MAAQgC,EAAEhC,OAAS,EAAI+B,EAAE/B,MAAQgC,EAAEhC,MAAQ,EAAI,CAAC,IAGZiC,QAAO,SAACpE,GAAO,OACrDA,EAAQmC,MAAMkC,cAAcC,SAASR,EAAWO,cAAc,IAGhE,OACErC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAAA5B,UACLZ,EAAAA,EAAAA,MAACuC,EAAO,CAACpC,MAAO,CAAEiD,QAAS,OAAQxC,SAAA,EACjCC,EAAAA,EAAAA,KAAC4B,EAAK,CAACY,MAAO,EAAGlD,MAAO,CAAEmD,UAAW,SAAUtB,MAAO,WAAYpB,SAAC,wBAGnEC,EAAAA,EAAAA,KAAA,OACEV,MAAO,CACLM,QAAS,OACTC,eAAgB,SAChB6C,aAAc,QACd3C,UAEFC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAK,CACJC,YAAY,kBACZC,SA3BiB,SAACC,GAC1Bf,EAAce,EAAMC,OAAOC,MAC7B,EA0BUC,QAAQjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAc,SAG3BlD,EAAAA,EAAAA,KAAA,OACEV,MAAO,CACL6D,WAAY,OACZZ,QAAS,GACTa,UAAW,IACX5D,aAAc,QACdO,UAEFC,EAAAA,EAAAA,KAACqD,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,IAAIvD,SACnBiC,EAAiBhB,KAAI,SAAChD,EAASiD,GAAK,OACnCjB,EAAAA,EAAAA,KAACuD,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE7D,UACvCC,EAAAA,EAAAA,KAAC6D,EAAW,CAAC7F,QAASgE,EAAiBf,MADMA,EAEzC,YAOpB,C","sources":["components/ProductCard.js","HomePage.js"],"sourcesContent":["import React, { useState, memo } from 'react';\nimport { Card, Tag, Button, Modal } from 'antd';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\n\n\nconst ProductCard = memo(({ product }) => {\n\n    const [visible, setVisible] = useState(false);\n    const [proofVisible, setProofVisible] = useState({});\n    const [image, setImage] = useState(\"\");\n    const [imageVisible, setImageVisible] = useState({});\n    return (\n        <Card\n            hoverable\n            style={{ width: \"100%\", borderRadius: \"15px\" }}\n            cover={\n                <div\n                    style={{\n                        width: \"100%\",\n                        height: \"150px\",\n                        overflow: \"hidden\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <LazyLoadImage\n                        alt={product.title}\n                        src={`./assets/${product.image}`}\n                        placeholderSrc={`${product.image.replace('.jpg', '_compressed.jpg')}`}\n                        effect=\"blur\"\n                        style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            objectFit: \"cover\",\n                        }}\n                        onClick={() => {\n                            setImageVisible(true);\n                            setImage(product);\n                        }}\n                    />\n                    <Modal\n                        visible={imageVisible && image === product}\n                        onOk={() => setImageVisible(false)}\n                        onCancel={() => setImageVisible(false)}\n                    >\n                        <LazyLoadImage\n                            alt={product.title}\n                            src={`/assets/${product.image}`}\n                            placeholderSrc={`${product.image.replace('.jpg', '_compressed.jpg')}`}\n                            effect=\"blur\"\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                objectFit: \"cover\",\n                            }}\n                        />\n                    </Modal>\n                </div>\n            }\n        >\n            <Card.Meta\n                title={product.title}\n                description={product.description}\n            />\n            <p>\n                <strong>Kategorier: </strong>\n                {product.category.map((category, index) => (\n                    <Tag key={index} color=\"red\">\n                        {category}\n                    </Tag>\n                ))}\n            </p>\n            <p>\n                <strong>Lokationer: </strong>\n                {product.locations.map((location, index) => (\n                    <Tag key={index} color=\"blue\">\n                        {location}\n                    </Tag>\n                ))}\n            </p>\n            <Button\n                type=\"primary\"\n                onClick={() => {\n                    setVisible(true);\n                    setProofVisible(product);\n                }}\n            >\n                Bevis\n            </Button>\n            <Modal\n                title=\"Bevis\"\n                visible={visible && proofVisible === product}\n                onOk={() => setVisible(false)}\n                onCancel={() => setVisible(false)}\n            >\n                <LazyLoadImage alt=\"\" src={product.proof_image} />\n                <p>{product.proof_text}</p>\n            </Modal>\n        </Card>\n    );\n});\n\nexport default ProductCard;","import React, { useState } from \"react\";\nimport products from \"./products.json\";\nimport ProductCard from \"./components/ProductCard\";\nimport {\n  Col,\n  Input,\n  Row,\n  Layout,\n  Typography,\n} from \"antd\";\n\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nconst HomePage = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const sortedProducts = products.sort((a, b) =>\n    a.title < b.title ? -1 : a.title > b.title ? 1 : 0\n  );\n\n  const filteredProducts = sortedProducts.filter((product) =>\n    product.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <Layout>\n      <Content style={{ padding: \"0px\" }}>\n        <Title level={2} style={{ textAlign: \"center\", color: \"#595959\" }}>\n          Veganske produkter\n        </Title>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginBottom: \"20px\",\n          }}\n        >\n          <Input\n            placeholder=\"Search by title\"\n            onChange={handleSearchChange}\n            prefix={<SearchOutlined />}\n          />\n        </div>\n        <div\n          style={{\n            background: \"#fff\",\n            padding: 24,\n            minHeight: 380,\n            borderRadius: \"25px\",\n          }}\n        >\n          <Row gutter={[16, 16]}>\n            {filteredProducts.map((product, index) => (\n              <Col xs={24} sm={12} md={8} lg={6} xl={4} key={index}>\n                <ProductCard product={filteredProducts[index]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"],"names":["memo","_ref","product","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","proofVisible","setProofVisible","_useState5","_useState6","image","setImage","_useState7","_useState8","imageVisible","setImageVisible","_jsxs","Card","hoverable","style","width","borderRadius","cover","height","overflow","display","justifyContent","alignItems","children","_jsx","LazyLoadImage","alt","title","src","concat","placeholderSrc","replace","effect","objectFit","onClick","Modal","onOk","onCancel","description","category","map","index","Tag","color","locations","location","Button","type","proof_image","proof_text","Content","Layout","Title","Typography","searchTerm","setSearchTerm","filteredProducts","products","a","b","filter","toLowerCase","includes","padding","level","textAlign","marginBottom","Input","placeholder","onChange","event","target","value","prefix","SearchOutlined","background","minHeight","Row","gutter","Col","xs","sm","md","lg","xl","ProductCard"],"sourceRoot":""}